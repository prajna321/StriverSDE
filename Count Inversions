#include <bits/stdc++.h>
using namespace std;

#define ll long long

ll merge(long long *arr, ll low, ll high, ll mid) {
    vector<ll> temp;
    ll left = low;
    ll right = mid + 1;
    ll cnt = 0;

    while (left <= mid && right <= high) {
        if (arr[left] < arr[right]) {
            temp.push_back(arr[left++]);
        } else {
            //right is smaller
            cnt += (mid - left + 1);
            temp.push_back(arr[right++]);
        }
    }

    while (left <= mid) {
        temp.push_back(arr[left++]);
    }
    while (right <= high) {
        temp.push_back(arr[right++]);
    }

    for (int i = low; i <= high; i++) {
        arr[i] = temp[i - low];
    }

    return cnt;
}

ll mergeSort(long long *arr, ll low, ll high) {
    if (low >= high) {
        return 0;
    }
    ll cnt = 0;
    ll mid = low + (high - low) / 2;
    cnt += mergeSort(arr, low, mid);
    cnt += mergeSort(arr, mid + 1, high);
    cnt += merge(arr, low, high, mid);
    return cnt;
}

long long getInversions(long long *arr, int n) {
    return mergeSort(arr, 0, n - 1);
}
