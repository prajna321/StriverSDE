//2queues
class MyStack {
public:
    queue<int> q1,q2;
    MyStack() {
        
    }
    
    void push(int x) { //tc:O(n) sc:O(n)
        q2.push(x);
        while(!q1.empty()){
            q2.push(q1.front());
            q1.pop();
        }
        swap(q1,q2);
    }
    
    int pop() {
//q1 e ulta shb boshano na
        int n=q1.front();
        q1.pop();
        return n;
    }
    
    int top() {
//q1 e ulta shb boshano na
        return q1.front();
    }
    
    bool empty() {
        return q1.empty();
    }
};


//using 2 queues
class MyStack {
public:
    queue<int> q;
    MyStack() {
        
    }
    
    void push(int x) {
        q.push(x);
        int sz=q.size()-1;
        while(sz--){
            q.push(q.front());
            q.pop();
        }
    }
    
    int pop() {
        int x=q.front();
        q.pop();
        return x;
    }
    
    int top() {
        return q.front();
    }
    
    bool empty() {
        return q.empty();
    }
};

