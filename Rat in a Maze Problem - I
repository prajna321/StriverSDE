//lexicographical order
//TC:O(4^(n*m))
//SC:O(n*m)
class Solution{
    public:
    
    void solve(int i,int j,vector<string>& ans,vector<vector<int>> &m, int n,vector<vector<int>>& vis,string temp,int drow[],int dcol[]){
        if(i==n-1 && j==n-1){
            ans.push_back(temp);
            return;
        }
        string dir="DLRU";
        for(int ind=0;ind<4;ind++){
            int nexti=i+drow[ind];
            int nextj=j+dcol[ind];
            if(nexti>=0 && nextj>=0 && nexti<n && nextj<n && !vis[nexti][nextj] && m[nexti][nextj]==1){
                vis[i][j]=1;
                solve(nexti,nextj,ans,m,n,vis,temp+dir[ind],drow,dcol);
                vis[i][j]=0;
            }
        }
    }
    
    vector<string> findPath(vector<vector<int>> &m, int n) {
        vector<string> ans;
        string temp;
        if(m[0][0]!=1){
            return ans;
        }
        vector<vector<int>> vis(n,vector<int>(n,0));
        int drow[]={1,0,0,-1};
        int dcol[]={0,-1,1,0};
        solve(0,0,ans,m,n,vis,temp,drow,dcol);
        return ans;
    }
};
