#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    template <typename T>

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
            {
                delete left;
            }
            if (right)
            {
                delete right;
            }
        }
    };

*************************************************************/

BinaryTreeNode<int>* suc(BinaryTreeNode<int>* root, int key){
    BinaryTreeNode<int>* successor=NULL;
    while(root){
        if(root->data>key){
            successor=root;
            root=root->left;
        }
        else{
            root=root->right;
        }
    }
    return successor;
}
BinaryTreeNode<int>* pre(BinaryTreeNode<int>* root, int key){
    BinaryTreeNode<int>* predecessor=NULL;
    while(root){
        if(root->data<key){
            predecessor=root;
            root=root->right;
        }
        else{
            root=root->left;
        }
    }
    return predecessor;
}



pair<int,int> predecessorSuccessor(BinaryTreeNode<int>* root, int key)
{
    BinaryTreeNode<int>* s=suc(root,key);
    BinaryTreeNode<int>* p=pre(root,key);
    int a=-1,b=-1;
    if(p){
        a=p->data;
    }
    if(s){
        b=s->data;
    }
    return {a,b};
}

