 //had this been a binary tree we could have done inorder,preorder,postorder
for BST,height=log 2 N So,for traversal time complexity is O(log 2 N)
in bst,L<N<R


class Solution {
public:
    TreeNode* searchBST(TreeNode* root, int val) {
        while(root && root->val!=val){
            if(val<root->val){
                root=root->left;
            }
            else{
                root=root->right;
            }
        }
        return root;
    }
};
