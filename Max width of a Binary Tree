class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        int ans=0;
        if(!root){
            return ans;
        }
        queue<pair<TreeNode*,int>> q;
        q.push({root,0});
        while(!q.empty()){
            int min_index=q.front().second;//index of first guy
            int size=q.size();
            int first,last;
            for(int i=0;i<size;i++){
                int curr_idx=q.front().second-min_index;
                TreeNode* node=q.front().first;
                q.pop();
                if(i==0){
                    first=curr_idx;
                }
                if(i==size-1){
                    last=curr_idx;
                }
                if(node->left){
                    q.push({node->left,2*curr_idx+1});
                }
                if(node->right){
                    q.push({node->right,2*curr_idx+2});
                }
            }
            ans=max(ans,last-first+1);
        }
        return ans;
    }
};
