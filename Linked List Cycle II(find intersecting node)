/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(!head || !(head->next)){
            return NULL;
        }
        ListNode *slow=head;
        ListNode *fast=head;
        bool flg=0;
        while(fast){
            fast=fast->next;
            if(fast){
                fast=fast->next;
            }
            slow=slow->next;
            if(slow==fast){
                flg=1;
                break;
            }
        }
        if(flg==0){
            return NULL;
        }
        slow=head;
        while(slow!=fast){
            fast=fast->next;
            slow=slow->next;
        }
        return slow;
    }
};
