class Solution {
public:
    int orangesRotting(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        queue<pair<int,pair<int,int>>> q;
        vector<vector<int>> vis(n,vector<int>(m,0));
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==2){
                    q.push({i,{j,0}});
                    vis[i][j]=2;
                }
            }
        }
        int time=0;
        while(!q.empty()){
            int r=q.front().first;
            int c=q.front().second.first;
            int t=q.front().second.second;
            time=max(time,t);
            q.pop();
            int drow[]={-1,0,1,0};
            int dcol[]={0,1,0,-1};
            for(int i=0;i<4;i++){
                int newr=r+drow[i];
                int newc=c+dcol[i];
                if(newr>=0 && newr<n && newc>=0 && newc<m && vis[newr][newc]!=2 && grid[newr][newc]==1){
                    q.push({newr,{newc,t+1}});
                    vis[newr][newc]=2;
                }
            }
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(vis[i][j]!=2 && grid[i][j]==1){
                    return -1;
                }
            }
        }
        return time;
    }
};
