class Solution {
public:
    bool canFinish(int n, vector<vector<int>>& p) {
         vector<vector<int>> adj(n);
         for(auto x:p){
             adj[x[1]].push_back(x[0]);
         }
         vector<int> indegree(n,0);
         for(int i=0;i<n;i++){
             for(auto it:adj[i]){
                 indegree[it]++;
             }
         }
         queue<int> q;
         for(int i=0;i<n;i++){
             if(indegree[i]==0){
                 q.push(i);
             }
         }
         int cnt=0;
         while(!q.empty()){
             int node=q.front();
             q.pop();
             cnt++;
             for(auto it:adj[node]){
                 indegree[it]--;
                 if(indegree[it]==0){
                     q.push(it);
                 }
             }
         }
         if(cnt!=n){
             //cycle
             return  false;
         }
         return true;
    }
};
