//min of all max
bool isPossible(vector<int> &boards, int k,int mid){
    int allocatedPainters=1,board=0;
    for(int i=0;i<boards.size();i++){
        if(boards[i]>mid){
            return false;
        }
        if(board+boards[i]<=mid){
            board+=boards[i];
        }
        else{
            allocatedPainters++;
            board=boards[i];
        }
    }
    if(allocatedPainters>k){
        return false;
    }
    return true;
}

int findLargestMinDistance(vector<int> &boards, int k)
{
    int n=boards.size();
    int low=1e8,high=0;
    for(auto x:boards){
        low=min(low,x);
        high+=x;
    }
    int ans=-1;
    while(low<=high){
        int mid=low+(high-low)/2;
        if(isPossible(boards,k,mid)){
            ans=mid;
            high=mid-1;
        }
        else{
            low=mid+1;
        }
    }
    return ans;
}
